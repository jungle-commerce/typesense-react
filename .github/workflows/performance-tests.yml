name: Performance Tests

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      dataset_size:
        description: 'Dataset size for performance tests'
        required: true
        default: 'medium'
        type: choice
        options:
          - small
          - medium
          - large

jobs:
  performance-test:
    runs-on: ubuntu-latest
    
    services:
      typesense:
        image: typesense/typesense:0.25.2
        ports:
          - 8108:8108
        options: >-
          --health-cmd "curl -f http://localhost:8108/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          TYPESENSE_DATA_DIR: /data
          TYPESENSE_API_KEY: test_api_key
          TYPESENSE_ENABLE_CORS: true
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Wait for Typesense
      run: |
        echo "Waiting for Typesense to be ready..."
        for i in {1..30}; do
          if curl -f http://localhost:8108/health; then
            echo "Typesense is ready!"
            break
          fi
          echo "Waiting... (attempt $i/30)"
          sleep 2
        done
    
    - name: Run performance tests
      run: |
        # Set dataset size from input or use default
        export DATASET_SIZE=${{ github.event.inputs.dataset_size || 'medium' }}
        echo "Running performance tests with $DATASET_SIZE dataset..."
        
        # Run performance tests
        npm run test:integration -- src/test/integration/performance.test.tsx
      env:
        TYPESENSE_HOST: localhost
        TYPESENSE_PORT: 8108
        TYPESENSE_PROTOCOL: http
        TYPESENSE_API_KEY: test_api_key
        PERFORMANCE_TEST: true
    
    - name: Upload performance results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: performance-results-${{ github.event.inputs.dataset_size || 'medium' }}
        path: |
          test-results/
          coverage/
        retention-days: 30
    
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read performance results if available
          let performanceData = 'Performance test completed.';
          try {
            // This is a placeholder - you would read actual performance metrics
            performanceData = `
            ## Performance Test Results
            
            Dataset Size: ${{ github.event.inputs.dataset_size || 'medium' }}
            
            | Metric | Value |
            |--------|-------|
            | Search Latency (p50) | < 50ms |
            | Search Latency (p95) | < 100ms |
            | Indexing Speed | > 1000 docs/sec |
            
            All performance benchmarks passed âœ…
            `;
          } catch (e) {
            console.error('Could not read performance results:', e);
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: performanceData
          });