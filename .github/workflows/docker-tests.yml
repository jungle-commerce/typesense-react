name: Docker Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docker-compose*.yml'
      - 'scripts/test-integration.sh'
      - '.github/workflows/docker-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docker-compose*.yml'
      - 'scripts/test-integration.sh'
      - '.github/workflows/docker-tests.yml'

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Test Docker Compose setup
      run: |
        echo "Testing docker-compose.yml..."
        docker-compose -f docker-compose.yml config
        
        echo "Testing docker-compose.test.yml..."
        docker-compose -f docker-compose.test.yml config
    
    - name: Start test containers
      run: docker-compose -f docker-compose.test.yml up -d
    
    - name: Wait for Typesense
      run: |
        echo "Waiting for Typesense to be ready..."
        for i in {1..30}; do
          if docker-compose -f docker-compose.test.yml exec -T typesense-test curl -f http://localhost:8108/health; then
            echo "Typesense is ready!"
            break
          fi
          echo "Waiting... (attempt $i/30)"
          sleep 2
        done
    
    - name: Check container logs
      if: always()
      run: docker-compose -f docker-compose.test.yml logs
    
    - name: Run integration tests with Docker
      run: |
        export TYPESENSE_HOST=localhost
        export TYPESENSE_PORT=8109
        export TYPESENSE_PROTOCOL=http
        export TYPESENSE_API_KEY=test_api_key
        npm run test:integration
    
    - name: Stop containers
      if: always()
      run: docker-compose -f docker-compose.test.yml down -v

  test-script:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Make test script executable
      run: chmod +x scripts/test-integration.sh
    
    - name: Test integration script
      run: ./scripts/test-integration.sh
      env:
        COMPOSE_FILE: docker-compose.test.yml
        TEST_COMMAND: "npm run test:integration"