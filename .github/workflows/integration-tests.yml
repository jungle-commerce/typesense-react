name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Start Typesense container
      run: |
        docker-compose -f docker-compose.test.yml up -d
        echo "Waiting for Typesense to be ready..."
        timeout 30s bash -c 'until docker-compose -f docker-compose.test.yml exec -T typesense-test curl -f http://localhost:8108/health > /dev/null 2>&1; do sleep 1; done'
        echo "Typesense is ready!"
    
    - name: Run integration tests
      run: npm run test:integration
      env:
        TYPESENSE_HOST: localhost
        TYPESENSE_PORT: 8109
        TYPESENSE_PROTOCOL: http
        TYPESENSE_API_KEY: test_api_key
        CI: true
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
    
    - name: Stop containers
      if: always()
      run: docker-compose -f docker-compose.test.yml down -v
    
    - name: Clean up Docker resources
      if: always()
      run: |
        docker system prune -f
        docker volume prune -f

  test-examples:
    runs-on: ubuntu-latest
    needs: integration-tests
    
    strategy:
      matrix:
        example: [basic-search, advanced-filtering, multi-collection]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Build library
      run: npm run build
    
    - name: Start Typesense container
      run: |
        docker-compose -f docker-compose.test.yml up -d
        timeout 30s bash -c 'until docker exec typesense-react-test curl -f http://localhost:8108/health > /dev/null 2>&1; do sleep 1; done'
    
    - name: Install example dependencies
      working-directory: examples/${{ matrix.example }}
      run: npm install
    
    - name: Build example
      working-directory: examples/${{ matrix.example }}
      run: npm run build
      env:
        VITE_TYPESENSE_HOST: localhost
        VITE_TYPESENSE_PORT: 8109
        VITE_TYPESENSE_PROTOCOL: http
        VITE_TYPESENSE_API_KEY: test_api_key
    
    - name: Stop containers
      if: always()
      run: docker-compose -f docker-compose.test.yml down -v