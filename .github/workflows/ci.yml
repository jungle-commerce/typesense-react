name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Don't fail if linting has issues

  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unit
        name: unit-tests
        fail_ci_if_error: false

  integration-tests:
    runs-on: ubuntu-latest
    
    services:
      typesense:
        image: typesense/typesense:0.25.2
        ports:
          - 8108:8108
        options: >-
          --health-cmd "curl -f http://localhost:8108/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          TYPESENSE_DATA_DIR: /data
          TYPESENSE_API_KEY: test_api_key
          TYPESENSE_ENABLE_CORS: true
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Wait for Typesense
      run: |
        echo "Waiting for Typesense to be ready..."
        for i in {1..30}; do
          if curl -f http://localhost:8108/health; then
            echo "Typesense is ready!"
            break
          fi
          echo "Waiting... (attempt $i/30)"
          sleep 2
        done
    
    - name: Run integration tests
      run: npm run test:integration:coverage
      env:
        TYPESENSE_HOST: localhost
        TYPESENSE_PORT: 8108
        TYPESENSE_PROTOCOL: http
        TYPESENSE_API_KEY: test_api_key
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: integration
        name: integration-tests
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build package
      run: npm run build
    
    - name: Check build output
      run: |
        echo "Checking build output..."
        ls -la dist/
        
        # Verify essential files exist
        test -f dist/index.js || (echo "dist/index.js not found!" && exit 1)
        test -f dist/index.d.ts || (echo "dist/index.d.ts not found!" && exit 1)
        
        echo "Build output looks good!"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7

  test-examples:
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        example: [basic-search, advanced-filtering, multi-collection]
    
    services:
      typesense:
        image: typesense/typesense:0.25.2
        ports:
          - 8108:8108
        options: >-
          --health-cmd "curl -f http://localhost:8108/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          TYPESENSE_DATA_DIR: /data
          TYPESENSE_API_KEY: test_api_key
          TYPESENSE_ENABLE_CORS: true
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Build package (for examples to link)
      run: npm run build
    
    - name: Install example dependencies
      working-directory: examples/${{ matrix.example }}
      run: npm install
    
    - name: Build example
      working-directory: examples/${{ matrix.example }}
      run: npm run build
      continue-on-error: true  # Examples might not have build scripts

  all-tests-pass:
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, integration-tests, build, test-examples]
    
    steps:
    - name: All tests passed
      run: echo "All tests passed successfully!"